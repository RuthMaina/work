/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Payroll;

import static Payroll.Login.user;
import com.placeholder.PlaceHolder;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruth
 */
public class Department extends javax.swing.JFrame {
    Menu m = new Menu(user);

    /**
     * Creates new form Employees
     */
    public Department() {
        initComponents();
        holder = new PlaceHolder(txtSearch, "Search By Department Name");
         holder = new PlaceHolder(txtSearchSDep, "Search By Designation");
        //holder.setCursiva(true);
         FillTable(tableDep,"SELECT `ID`, `Dep_Name` from departments");
           FillTable(tblSDep,"SELECT `ID`, `Designation`,OverRate,OverAmount,BasicPay,Department from sub_departments");
         fillDepartment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStatus = new javax.swing.ButtonGroup();
        btnRate = new javax.swing.ButtonGroup();
        Header = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnCIr = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        personalInfo2 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDep = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        personalInfo3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        OverSDep = new javax.swing.JTextField();
        DesigSDep = new javax.swing.JTextField();
        btnYes = new javax.swing.JRadioButton();
        btnNo = new javax.swing.JRadioButton();
        btnCash = new javax.swing.JRadioButton();
        btnPer = new javax.swing.JRadioButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        SalarySDep = new javax.swing.JTextField();
        ComboDepSDep = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSDep = new javax.swing.JTable();
        txtSearchSDep = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnCIrSDep = new javax.swing.JButton();
        btnSaveSDep = new javax.swing.JButton();
        btnUpdateSDep = new javax.swing.JButton();
        btnDelSDep = new javax.swing.JButton();
        btnBackSDep = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(845, 523));

        Header.setBackground(new java.awt.Color(18, 19, 34));
        Header.setMinimumSize(new java.awt.Dimension(776, 72));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Payroll System");
        jLabel7.setIconTextGap(5);

        jLabel8.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("DEPARTMENTS");

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addGap(263, 263, 263))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(HeaderLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(Header, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.GridLayout(2, 3, 10, 5));

        btnCIr.setBackground(new java.awt.Color(45, 43, 63));
        btnCIr.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnCIr.setForeground(new java.awt.Color(255, 255, 255));
        btnCIr.setText("Clear Fields");
        btnCIr.setBorderPainted(false);
        btnCIr.setContentAreaFilled(false);
        btnCIr.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCIr.setOpaque(true);
        btnCIr.setPreferredSize(new java.awt.Dimension(74, 22));
        btnCIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCIrActionPerformed(evt);
            }
        });
        jPanel3.add(btnCIr);

        btnSave.setBackground(new java.awt.Color(45, 43, 63));
        btnSave.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setBorderPainted(false);
        btnSave.setContentAreaFilled(false);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setOpaque(true);
        btnSave.setPreferredSize(new java.awt.Dimension(74, 22));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel3.add(btnSave);

        btnUpdate.setBackground(new java.awt.Color(45, 43, 63));
        btnUpdate.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.setBorderPainted(false);
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.setEnabled(false);
        btnUpdate.setOpaque(true);
        btnUpdate.setPreferredSize(new java.awt.Dimension(74, 22));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(btnUpdate);

        btnDel.setBackground(new java.awt.Color(45, 43, 63));
        btnDel.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnDel.setForeground(new java.awt.Color(255, 255, 255));
        btnDel.setText("Delete");
        btnDel.setBorderPainted(false);
        btnDel.setContentAreaFilled(false);
        btnDel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDel.setEnabled(false);
        btnDel.setOpaque(true);
        btnDel.setPreferredSize(new java.awt.Dimension(74, 22));
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel3.add(btnDel);

        btnBack.setBackground(new java.awt.Color(18, 19, 34));
        btnBack.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setOpaque(true);
        btnBack.setPreferredSize(new java.awt.Dimension(74, 22));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel3.add(btnBack);

        personalInfo2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Description");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Name");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtDesc.setColumns(20);
        txtDesc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDesc.setRows(5);
        jScrollPane2.setViewportView(txtDesc);

        javax.swing.GroupLayout personalInfo2Layout = new javax.swing.GroupLayout(personalInfo2);
        personalInfo2.setLayout(personalInfo2Layout);
        personalInfo2Layout.setHorizontalGroup(
            personalInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInfo2Layout.createSequentialGroup()
                .addGroup(personalInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalInfo2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel24))
                    .addGroup(personalInfo2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel22)))
                .addGap(34, 34, 34)
                .addGroup(personalInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(txtName))
                .addGap(15, 15, 15))
        );
        personalInfo2Layout.setVerticalGroup(
            personalInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInfo2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(personalInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalInfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(personalInfo2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tableDep.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableDep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDepMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableDep);
        if (tableDep.getColumnModel().getColumnCount() > 0) {
            tableDep.getColumnModel().getColumn(0).setResizable(false);
            tableDep.getColumnModel().getColumn(0).setPreferredWidth(10);
            tableDep.getColumnModel().getColumn(1).setResizable(false);
            tableDep.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch.setToolTipText("Search by department name");
        txtSearch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(personalInfo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(13, 13, 13))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(personalInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );

        jTabbedPane1.addTab("Departments", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        personalInfo3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Overtime Rate");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Designation");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Overtime Status");

        OverSDep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OverSDep.setText("0");
        OverSDep.setToolTipText("Enter the overtime rate or amount number");
        OverSDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OverSDepActionPerformed(evt);
            }
        });

        DesigSDep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnYes.setBackground(new java.awt.Color(255, 255, 255));
        btnStatus.add(btnYes);
        btnYes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnYes.setText("Yes");
        btnYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesActionPerformed(evt);
            }
        });

        btnNo.setBackground(new java.awt.Color(255, 255, 255));
        btnStatus.add(btnNo);
        btnNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNo.setText("No");

        btnCash.setBackground(new java.awt.Color(255, 255, 255));
        btnRate.add(btnCash);
        btnCash.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCash.setText("Cash");

        btnPer.setBackground(new java.awt.Color(255, 255, 255));
        btnRate.add(btnPer);
        btnPer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPer.setText("Percentage");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Department");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("Basic Salary");

        SalarySDep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SalarySDep.setText("0");

        ComboDepSDep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboDepSDep.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboDepSDepItemStateChanged(evt);
            }
        });
        ComboDepSDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboDepSDepActionPerformed(evt);
            }
        });
        ComboDepSDep.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ComboDepSDepPropertyChange(evt);
            }
        });
        ComboDepSDep.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                ComboDepSDepVetoableChange(evt);
            }
        });

        javax.swing.GroupLayout personalInfo3Layout = new javax.swing.GroupLayout(personalInfo3);
        personalInfo3.setLayout(personalInfo3Layout);
        personalInfo3Layout.setHorizontalGroup(
            personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInfo3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalInfo3Layout.createSequentialGroup()
                        .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel28))
                        .addGap(27, 27, 27)
                        .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(personalInfo3Layout.createSequentialGroup()
                                .addComponent(btnYes)
                                .addGap(18, 18, 18)
                                .addComponent(btnNo))
                            .addGroup(personalInfo3Layout.createSequentialGroup()
                                .addComponent(btnCash)
                                .addGap(18, 18, 18)
                                .addComponent(btnPer)))
                        .addContainerGap(96, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalInfo3Layout.createSequentialGroup()
                        .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalInfo3Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(29, 29, 29)
                                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SalarySDep)
                                    .addComponent(OverSDep)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, personalInfo3Layout.createSequentialGroup()
                                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DesigSDep)
                                    .addComponent(ComboDepSDep, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(14, 14, 14))))
        );
        personalInfo3Layout.setVerticalGroup(
            personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalInfo3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboDepSDep, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DesigSDep, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnYes)
                    .addComponent(btnNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCash)
                        .addComponent(btnPer))
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OverSDep, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(personalInfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalarySDep, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tblSDep.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblSDep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Designation", "O.Rate", "O.Amount", "Basic S.", "Department"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSDep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSDepMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblSDep);
        if (tblSDep.getColumnModel().getColumnCount() > 0) {
            tblSDep.getColumnModel().getColumn(0).setResizable(false);
            tblSDep.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblSDep.getColumnModel().getColumn(1).setResizable(false);
            tblSDep.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblSDep.getColumnModel().getColumn(2).setResizable(false);
            tblSDep.getColumnModel().getColumn(2).setPreferredWidth(40);
            tblSDep.getColumnModel().getColumn(3).setResizable(false);
            tblSDep.getColumnModel().getColumn(3).setPreferredWidth(40);
            tblSDep.getColumnModel().getColumn(4).setResizable(false);
            tblSDep.getColumnModel().getColumn(4).setPreferredWidth(50);
            tblSDep.getColumnModel().getColumn(5).setResizable(false);
            tblSDep.getColumnModel().getColumn(5).setPreferredWidth(70);
        }

        txtSearchSDep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchSDep.setToolTipText("Search by name");
        txtSearchSDep.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchSDepCaretUpdate(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridLayout(2, 3, 10, 5));

        btnCIrSDep.setBackground(new java.awt.Color(45, 43, 63));
        btnCIrSDep.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnCIrSDep.setForeground(new java.awt.Color(255, 255, 255));
        btnCIrSDep.setText("Clear Fields");
        btnCIrSDep.setBorderPainted(false);
        btnCIrSDep.setContentAreaFilled(false);
        btnCIrSDep.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCIrSDep.setOpaque(true);
        btnCIrSDep.setPreferredSize(new java.awt.Dimension(74, 22));
        btnCIrSDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCIrSDepActionPerformed(evt);
            }
        });
        jPanel4.add(btnCIrSDep);

        btnSaveSDep.setBackground(new java.awt.Color(45, 43, 63));
        btnSaveSDep.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnSaveSDep.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveSDep.setText("Save");
        btnSaveSDep.setBorderPainted(false);
        btnSaveSDep.setContentAreaFilled(false);
        btnSaveSDep.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveSDep.setOpaque(true);
        btnSaveSDep.setPreferredSize(new java.awt.Dimension(74, 22));
        btnSaveSDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSDepActionPerformed(evt);
            }
        });
        jPanel4.add(btnSaveSDep);

        btnUpdateSDep.setBackground(new java.awt.Color(45, 43, 63));
        btnUpdateSDep.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnUpdateSDep.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateSDep.setText("Update");
        btnUpdateSDep.setBorderPainted(false);
        btnUpdateSDep.setContentAreaFilled(false);
        btnUpdateSDep.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateSDep.setEnabled(false);
        btnUpdateSDep.setOpaque(true);
        btnUpdateSDep.setPreferredSize(new java.awt.Dimension(74, 22));
        btnUpdateSDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSDepActionPerformed(evt);
            }
        });
        jPanel4.add(btnUpdateSDep);

        btnDelSDep.setBackground(new java.awt.Color(45, 43, 63));
        btnDelSDep.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnDelSDep.setForeground(new java.awt.Color(255, 255, 255));
        btnDelSDep.setText("Delete");
        btnDelSDep.setBorderPainted(false);
        btnDelSDep.setContentAreaFilled(false);
        btnDelSDep.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelSDep.setEnabled(false);
        btnDelSDep.setOpaque(true);
        btnDelSDep.setPreferredSize(new java.awt.Dimension(74, 22));
        btnDelSDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelSDepActionPerformed(evt);
            }
        });
        jPanel4.add(btnDelSDep);

        btnBackSDep.setBackground(new java.awt.Color(18, 19, 34));
        btnBackSDep.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnBackSDep.setForeground(new java.awt.Color(255, 255, 255));
        btnBackSDep.setText("Back");
        btnBackSDep.setBorderPainted(false);
        btnBackSDep.setContentAreaFilled(false);
        btnBackSDep.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackSDep.setOpaque(true);
        btnBackSDep.setPreferredSize(new java.awt.Dimension(74, 22));
        btnBackSDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackSDepActionPerformed(evt);
            }
        });
        jPanel4.add(btnBackSDep);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(personalInfo3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(txtSearchSDep))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchSDep, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addGap(8, 8, 8))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(personalInfo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sub-Departments", jPanel2);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYesActionPerformed

    
        public final void FillTable(JTable table, String Query)
{
    try
    {
       Connection con = DBConnect.connect();
       DBConnect.ps = con.prepareStatement(Query);
      DBConnect.rs =  DBConnect.ps.executeQuery();
         
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }
        int columns =  DBConnect.rs.getMetaData().getColumnCount();
        while( DBConnect.rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] =  DBConnect.rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow( DBConnect.rs.getRow()-1,row);
        }

        con.close();
    }
    catch(SQLException e)
    {
        JOptionPane.showMessageDialog(this,e);
    }
} 
        String DepID = "";
        String SDepID = "";
    private void tableDepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDepMouseClicked
        // TODO add your handling code here:
            int selectedRow = tableDep.getSelectedRow();
        String hid = tableDep.getValueAt(selectedRow, 0).toString();
        try {
           Connection con = DBConnect.connect();
            String sql = "select * FROM departments WHERE id = ?";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1,hid);
            DBConnect.rs = DBConnect.ps.executeQuery();
            if(DBConnect.rs.next()) {
                 txtName.setText(DBConnect.rs.getString(2));
                txtDesc.setText(DBConnect.rs.getString(3));       
            }
            con.close();
             btnUpdate.setEnabled(true);
            btnDel.setEnabled(true);
 btnSave.setEnabled(false);
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
        DepID = hid;
    }//GEN-LAST:event_tableDepMouseClicked
PlaceHolder holder;
    private void txtSearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchCaretUpdate
        // TODO add your handling code here:
        if(!"Search By Department Name".equals(txtSearch.getText())){
        FillTable(tableDep,"SELECT `ID`, `Dep_Name` from departments "
            + " WHERE Dep_Name LIKE '%" + txtSearch.getText() + "%' ");
        }
         
    }//GEN-LAST:event_txtSearchCaretUpdate

    private void ComboDepSDepPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ComboDepSDepPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ComboDepSDepPropertyChange

    private void ComboDepSDepVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_ComboDepSDepVetoableChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ComboDepSDepVetoableChange

    private void ComboDepSDepItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboDepSDepItemStateChanged
        // TODO add your handling code here:
      
    }//GEN-LAST:event_ComboDepSDepItemStateChanged
String depIDinSub = "";
    private void ComboDepSDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboDepSDepActionPerformed
        // TODO add your handling code here:
          //change the id value
          if(ComboDepSDep.getItemCount() > 1){
          depIDinSub = depIDlist.get(ComboDepSDep.getSelectedIndex());
          }
    }//GEN-LAST:event_ComboDepSDepActionPerformed

    private void btnCIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCIrActionPerformed
        // TODO add your handling code here:
      
        txtSearch.setText("");
       txtName.setText("");
       txtDesc.setText("");
       DepID = "";
             btnUpdate.setEnabled(false);
            btnDel.setEnabled(false);
        
    }//GEN-LAST:event_btnCIrActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(!txtName.getText().equals(""))
        {
         try {
          Connection con = DBConnect.connect();
        
            String sql = "INSERT INTO `departments`(`Dep_Name`, `Dep_Description`) VALUES (?,?)";
            // java.sql.Date date1 = new java.sql.Date(FromEv.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1, txtName.getText());
             DBConnect.ps.setString(2, txtDesc.getText());
            DBConnect.ps.execute();
            JOptionPane.showMessageDialog(null, "NEW RECORD SAVED");
             con.close();
            FillTable(tableDep,"SELECT `ID`, `Dep_Name` from departments");
            fillDepartment();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
        }
        else
            JOptionPane.showMessageDialog(null, "Name is empty!");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
         if(!"".equals(DepID)){
           try {
              
            Connection con = DBConnect.connect();
            String query = "DELETE FROM departments WHERE id = ?";
            DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.setInt  (1, Integer.parseInt(DepID));
            DBConnect.ps.executeUpdate();
            con.close();
            JOptionPane.showMessageDialog(null, "Record Deleted");
             FillTable(tableDep,"SELECT `ID`, `Dep_Name` from departments");
             fillDepartment();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
        txtSearch.setText("");
       txtName.setText("");
       txtDesc.setText("");
       DepID = "";
          btnSave.setEnabled(true);
             btnUpdate.setEnabled(false);
            btnDel.setEnabled(false);
        DepID = "";
         }
         else
             JOptionPane.showMessageDialog(null, "ID NEEDED. CLICK RECORD FROM TABLE");
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
              if("".equals(DepID))
        {
            JOptionPane.showMessageDialog(null, "ID NEEDED. CLICK RECORD FROM TABLE");
        }
        else
        {

            try {
                 Connection con = DBConnect.connect();
                String query = "UPDATE `departments` SET `Dep_Name`=?,`Dep_Description`=? where ID = ?";
               DBConnect.ps = con.prepareStatement(query);
                  DBConnect.ps.setString(1, txtName.getText());
            DBConnect.ps.setString(2, txtDesc.getText());
             DBConnect.ps.setInt(3, Integer.parseInt(DepID));
                DBConnect.ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"RECORD UPDATED SUCCESSFULLY");
                con.close();
                 FillTable(tableDep,"SELECT `ID`, `Dep_Name` from departments");
                 fillDepartment();
                 
            }
            catch (SQLException ex ) {
                JOptionPane.showMessageDialog(null, ex);

            }}
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCIrSDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCIrSDepActionPerformed
        // TODO add your handling code here:
           txtSearchSDep.setText("");
       DesigSDep.setText("");
       OverSDep.setText("0");
       SalarySDep.setText("0");
       SDepID = "";
       btnRate.clearSelection();
       btnStatus.clearSelection();
             btnUpdateSDep.setEnabled(false);
            btnDelSDep.setEnabled(false);
            btnSave.setEnabled(true);
    }//GEN-LAST:event_btnCIrSDepActionPerformed
public static boolean isNumeric(String str)
{
  return str.matches("\\d") && str.matches("^[+-]?\\d*\\.?\\d*([eE]\\d)?\\d*$");  //match a number with optional '-' and decimal and also allows exponentiol and +/- signs.
}
    private void btnSaveSDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSDepActionPerformed
        // TODO add your handling code here:
          if(!DesigSDep.getText().equals("") && !SalarySDep.getText().equals(""))
        {
               if(SalarySDep.getText().chars().allMatch( Character::isDigit ))
               {
         try {
          Connection con = DBConnect.connect();
        
            String sql = "Insert into `sub_departments`(`Department`, `Designation`, `OverStatus`, `OverRate`, `OverAmount`, `BasicPay`)"
                    + " VALUES (?,?,?,?,?,?)";
            // java.sql.Date date1 = new java.sql.Date(FromEv.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1, ComboDepSDep.getSelectedItem().toString());
             DBConnect.ps.setString(2, DesigSDep.getText());
             if(btnYes.isSelected()){
            DBConnect.ps.setInt(3, 1);
             }
             else
             {
                   DBConnect.ps.setInt(3, 0);
             }
             
             if(btnCash.isSelected())
             {
            DBConnect.ps.setString(4, "CASH");
             }
             else if(btnPer.isSelected())
             {
                 DBConnect.ps.setString(4, "PERCENTAGE");
             } 
             else
             {
                    DBConnect.ps.setString(4, "NULL");
             }
          DBConnect.ps.setString(5, OverSDep.getText());
           DBConnect.ps.setString(6, SalarySDep.getText());
            DBConnect.ps.execute();
            JOptionPane.showMessageDialog(null, "NEW RECORD SAVED");
             con.close();
            FillTable(tblSDep,"SELECT `ID`, `Designation`,OverRate,OverAmount,BasicPay,Department from sub_departments");
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
        }
               else{
                   JOptionPane.showMessageDialog(null, "Invalid input for salary");
               }
        }
        else
            JOptionPane.showMessageDialog(null, "Some fields are empty");
    }//GEN-LAST:event_btnSaveSDepActionPerformed

    private void btnUpdateSDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSDepActionPerformed
        // TODO add your handling code here:
          if("".equals(SDepID))
        {
            JOptionPane.showMessageDialog(null, "ID NEEDED. CLICK RECORD FROM TABLE");
        }
        else
        {

            try {
                 Connection con = DBConnect.connect();
                String query = "UPDATE `sub_departments` SET `Department` = ?, `Designation` = ?, `OverStatus` = ?, `OverRate` = ?"
                        + ", `OverAmount` = ?, `BasicPay` = ?"
                        + " where ID = ?";
               DBConnect.ps = con.prepareStatement(query);
                  DBConnect.ps.setString(1, ComboDepSDep.getSelectedItem().toString());
             DBConnect.ps.setString(2, DesigSDep.getText());
             if(btnYes.isSelected()){
            DBConnect.ps.setInt(3, 1);
             }
             else
             {
                   DBConnect.ps.setInt(3, 0);
             }
             
             if(btnCash.isSelected())
             {
            DBConnect.ps.setString(4, "CASH");
             }
             else if(btnPer.isSelected())
             {
                 DBConnect.ps.setString(4, "PERCENTAGE");
             } 
             else
             {
                    DBConnect.ps.setString(4, "NULL");
             }
          DBConnect.ps.setString(5, OverSDep.getText());
           DBConnect.ps.setString(6, SalarySDep.getText());
           
             DBConnect.ps.setInt(7, Integer.parseInt(SDepID));
                DBConnect.ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"RECORD UPDATED SUCCESSFULLY");
                con.close();
                 FillTable(tblSDep,"SELECT `ID`, `Designation`,OverRate,OverAmount,BasicPay,Department from sub_departments");
                 
            }
            catch (SQLException ex ) {
                JOptionPane.showMessageDialog(null, ex);

            }}
    }//GEN-LAST:event_btnUpdateSDepActionPerformed

    private void btnDelSDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelSDepActionPerformed
        // TODO add your handling code here:
          if(!"".equals(SDepID)){
           try {
              
            Connection con = DBConnect.connect();
            String query = "DELETE FROM sub_departments WHERE id = ?";
            DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.setInt  (1, Integer.parseInt(SDepID));
            DBConnect.ps.executeUpdate();
            con.close();
            JOptionPane.showMessageDialog(null, "Record Deleted");
               FillTable(tblSDep,"SELECT `ID`, `Designation`,OverRate,OverAmount,BasicPay,Department from sub_departments");
             fillDepartment();
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
        DesigSDep.setText("");
       SalarySDep.setText("0");
       OverSDep.setText("0");
       btnRate.clearSelection();
       btnStatus.clearSelection();
       SDepID = "";
          btnSaveSDep.setEnabled(true);
             btnUpdateSDep.setEnabled(false);
            btnDelSDep.setEnabled(false);
        DepID = "";
         }
         else
             JOptionPane.showMessageDialog(null, "ID NEEDED. CLICK RECORD FROM TABLE");
    }//GEN-LAST:event_btnDelSDepActionPerformed

    private void btnBackSDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackSDepActionPerformed
        // TODO add your handling code here: m.setVisible(true);
          m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackSDepActionPerformed

    private void OverSDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OverSDepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OverSDepActionPerformed

    private void tblSDepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSDepMouseClicked
        // TODO add your handling code here:
           int selectedRow = tblSDep.getSelectedRow();
        String hid = tblSDep.getValueAt(selectedRow, 0).toString();
        try {
           Connection con = DBConnect.connect();
            String sql = "select * FROM sub_departments WHERE id = ?";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1,hid);
            DBConnect.rs = DBConnect.ps.executeQuery();
            if(DBConnect.rs.next()) {
                ComboDepSDep.setSelectedItem(DBConnect.rs.getString(2));
                DesigSDep.setText(DBConnect.rs.getString(3));
               if(DBConnect.rs.getInt(4) == 1)
               {
                   btnYes.setSelected(true);
               }
               else
               {
                   btnNo.setSelected(true);
               }
               switch (DBConnect.rs.getString(5)) {
                   case "CASH":
                       btnCash.setSelected(true);
                       break;
                   case "PERCENTAGE":
                       btnPer.setSelected(true);
                       break;
                   default:
                      btnRate.clearSelection();
                       break;
               }
                    OverSDep.setText(DBConnect.rs.getString(6)); 
                    SalarySDep.setText(DBConnect.rs.getString(7));
                    
            }
            con.close();
             btnUpdateSDep.setEnabled(true);
            btnDelSDep.setEnabled(true);
            btnSaveSDep.setEnabled(false);

        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
        SDepID = hid;
    }//GEN-LAST:event_tblSDepMouseClicked

    private void txtSearchSDepCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchSDepCaretUpdate
        // TODO add your handling code here:
         if(!"Search By Designation".equals(txtSearchSDep.getText())){
        FillTable(tblSDep,"SELECT ID,Designation,OverRate,OverAmount,BasicPay,Department from sub_departments"
            + " WHERE Designation LIKE '%" + txtSearchSDep.getText() + "%' ");
        }
    }//GEN-LAST:event_txtSearchSDepCaretUpdate
 ArrayList<String> depIDlist = new ArrayList<>();
    public final void fillDepartment(){
        
        try {
           Connection con = DBConnect.connect();
            String sql = "select * FROM departments";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.rs = DBConnect.ps.executeQuery();
             ComboDepSDep.removeAllItems();
             depIDlist.removeAll(depIDlist);
            while(DBConnect.rs.next()) {
                ComboDepSDep.addItem(DBConnect.rs.getString(2));
                depIDlist.add(Integer.toString(DBConnect.rs.getInt(1)));
            }
            con.close();
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Department.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Department.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Department.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Department.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Department().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboDepSDep;
    private javax.swing.JTextField DesigSDep;
    private javax.swing.JPanel Header;
    private javax.swing.JTextField OverSDep;
    private javax.swing.JTextField SalarySDep;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBackSDep;
    private javax.swing.JButton btnCIr;
    private javax.swing.JButton btnCIrSDep;
    private javax.swing.JRadioButton btnCash;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDelSDep;
    private javax.swing.JRadioButton btnNo;
    private javax.swing.JRadioButton btnPer;
    private javax.swing.ButtonGroup btnRate;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveSDep;
    private javax.swing.ButtonGroup btnStatus;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateSDep;
    private javax.swing.JRadioButton btnYes;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel personalInfo2;
    private javax.swing.JPanel personalInfo3;
    private javax.swing.JTable tableDep;
    private javax.swing.JTable tblSDep;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchSDep;
    // End of variables declaration//GEN-END:variables
}
